_________________________________________________________[TASK - 6]___________________________________________________________________

1) The class Movie is stated below. An instance of class Movie represents a film. This class has the following three properties:

title, which is a String representing the title of the movie
studio, which is a String representing the studio that made the movie
rating, which is a String representing the rating of the movie (i.e. PG­13, R, etc)
a) Write a constructor for the class Movie, which takes a String representing the title of the movie, a String representing the studio, and a String representing the rating as its arguments, and sets the respective class properties to these values.

b) The constructor for the class Movie will set the class property rating to "PG" as default when no rating is provided.

c) Write a method getPG, which takes an array of base type Movie as its argument, and returns a new array of only those movies in the input array with a rating of "PG". You may assume the input array is full of Movie instances. The returned array need not be full.

d) Write a piece of code that creates an instance of the class Movie with the title “Casino Royale”, the studio “Eon Productions”, and the rating “PG­13”

<-----------------------INPUT---------------------->
class movie {
    constructor(title, studio, rating){
        this.title = title;
        this.studio = studio;
        this.rating = "PG";
    }
    getrating() {
      return "the rating is  " + this.rating;
    }
}
  
  const CasinoRoyale = new movie( "Casino Royal", "Eon Productions", "PG13");
  console.log(CasinoRoyale);

<-----------------------OUTPUT---------------------->
movie {
  title: 'Casino Royal',
  studio: 'Eon Productions',
  rating: 'PG' }

2) Convert the UML diagram to Typescript class. - use number for double

var Circle = (function () {
    function Circle(radius, color) {
        this.radius = 1.0;
        this.color = "Red";
        if (typeof (radius) !== "undefined") {
            this.radius = radius;
        }
        if (typeof (color) !== "undefined") {
            this.color = color;
        }
    }
    Circle.prototype.getRadius = function () {
        return this.radius;
    };
    Circle.prototype.setRadius = function (radius) {
        this.radius = radius;
    };
    Circle.prototype.getColor = function () {
        return this.color;
    };
    Circle.prototype.setColor = function (color) {
        this.color = color;
    };
    Circle.prototype.toString = function () {
        return "Radius: " + this.radius + " Color: " + this.color;
    };
    Circle.prototype.getArea = function () {
        return (2 * (Math.PI) * this.radius);
    };
    Circle.prototype.getCircumference = function () {
        return (2 * this.radius);
    };
    return Circle;
}());
var c1 = new Circle();
console.log("Constructor with no params: " + c1.toString());
var c2 = new Circle(3.5);
console.log("Constructor with one param: " + c2.toString());
var c3 = new Circle(2.2, 'Yellow');
console.log("getRadius: " + c3.getRadius());
c3.setRadius(3.3);
console.log("Radius value after setRadius: " + c3.getRadius());
console.log("getColor: " + c3.getColor());
c3.setColor("Blue");
console.log("Color Value after setColor: " + c3.getColor());
console.log(c3.toString());
console.log("Area: " + c3.getArea());
console.log("Circumference: " + c3.getCircumference());

<-----------------------OUTPUT---------------------->
Constructor with no params: Radius: 1 Color: Red
Constructor with one param: Radius: 3.5 Color: Red
getRadius: 2.2
Radius value after setRadius: 3.3
getColor: Yellow
Color Value after setColor: Blue
Radius: 3.3 Color: Blue
Area: 20.734511513692635
Circumference: 6.6

3) Write a person class to hold all the details

<-----------------------INPUT---------------------->
//Create a class with constructor
class Person1 {
    constructor(myName, myAge, myPlace) {
      this.myName = myName;
      this.myAge = myAge;
      this.myPlace = myPlace;
    }

     myDetails1() {
        console.log(`Name: ${this.myName}`);
        console.log(`Age: ${this.myAge}`);
        console.log(`Place: ${this.myPlace}`);
      }
    }
  class Person2 {
    constructor(myInterests, myInspiration, myDream) {
      this.myInterests = myInterests;
      this.myInspiration = myInspiration;
      this.myDream = myDream;
    }
    
    myDetails2() {
      console.log(`Interest: ${this.myInterests}`);
      console.log(`Inspiration: ${this.myInspiration}`);
      console.log(`Dream: ${this.myDream}`);
    }
  }
  //my details arguments
  const person1 = new Person1('Harish', 22, 'Kanchipuram - 1');
  const person2 = new Person1('Thangavel', 22, 'Kanchipuram - 2');
  const addDetails = new Person2('Full Stack Developer', 'Abdul Kalam', 'Build a own house and live happily with my family')
  
  //details of person1 
  console.log('Person-1 Details:');
  person1.myDetails1();
  
  //details of person2
  console.log('\nPerson-2 Details:');
  person2.myDetails1();
  
  //My Interest, Inspiration and Dream
  console.log('\nMy Interest, Inspiration and Dream:');
  addDetails.myDetails2();

<-----------------------OUTPUT---------------------->
Person-1 Details:
Name: Harish
Age: 22
Place: Kanchipuram - 1

Person-2 Details:
Name: Thangavel
Age: 22
Place: Kanchipuram - 2

My Interest, Inspiration and Dream:
Interest: Full Stack Developer
Inspiration: Abdul Kalam
Dream: Build a own house and live happily with my family

4) Write a class to create the Uber price

<-----------------------INPUT---------------------->
let baseFee = .26;
let cities = ["Chennai", "Delhi", "Mumbai","Kolkata", "Bangalore" ];
let uberRates = [7, 14, 21, 28, 35];

let customerName = "Haris";
let customerCity = "Chennai"; 

console.log("Hi", customerName+ ", WELCOME TO UBER")

function getRate(customerCity) {
    function uberRate(customerCity, index) {
    let finalRate = (uberRates[index]) * baseFee;
    return finalRate;
  }
  console.log(customerCity, "rate is:", uberRate(customerCity, cities.indexOf(customerCity)))
  console.log("The Uber rate at " +customerCity+ " is " +uberRate(customerCity, cities.indexOf(customerCity)))
}
//call the getRate function passing in the customerCity arugment
getRate(customerCity)

<-----------------------OUTPUT---------------------->
Hi Haris, WELCOME TO UBER
Chennai rate is: 1.82
The Uber rate at Chennai is 1.82